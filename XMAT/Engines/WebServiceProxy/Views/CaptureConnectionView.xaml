<UserControl x:Class="XMAT.WebServiceCapture.CaptureConnectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:XMAT.WebServiceCapture"
             xmlns:ca="clr-namespace:XMAT.XboxLiveCaptureAnalysis"
             xmlns:app="clr-namespace:XMAT"
             mc:Ignorable="d" 
             Loaded="UserControl_Loaded"
             x:Name="CaptureConnectionControl"
             FocusManager.FocusedElement="{Binding ElementName=ConnectionList}"
             d:DesignHeight="720" d:DesignWidth="1280">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        <local:ProxyConnectionModelToBrushConverter x:Key="proxyConnectionModelToBrushConverter" />
        <Style x:Key="CenterGridHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
    </UserControl.Resources>
    <UserControl.CommandBindings>
        <CommandBinding Command="{x:Static local:WebServiceProxyCommands.EnableDevice}"     Executed="EnableDevice_Executed"     CanExecute="Enable_CanExecute"/>
        <CommandBinding Command="{x:Static local:WebServiceProxyCommands.DisableDevice}"    Executed="DisableDevice_Executed"    CanExecute="Disable_CanExecute"/>
        <CommandBinding Command="{x:Static local:WebServiceProxyCommands.StartStopCapture}" Executed="StartStopCapture_Executed" CanExecute="StartStopCapture_CanExecute"/>
        <CommandBinding Command="{x:Static local:WebServiceProxyCommands.CheckDevice}"    Executed="CheckDevice_Executed" />
    </UserControl.CommandBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="4"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <ToolBar Grid.Row="0" Grid.ColumnSpan="2" ToolBarTray.IsLocked="True">
            <Button x:Name="EnableButton" Command="{x:Static local:WebServiceProxyCommands.EnableDevice}" CommandTarget="{Binding ElementName=CaptureConnectionControl}"
                    d:Visibility="Visible"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource booleanToVisibilityConverter}}">Enable Xbox Proxy</Button>
            <Separator Visibility="{Binding Path=IsEnabled, ElementName=EnableButton, Mode=OneWay, Converter={StaticResource booleanToVisibilityConverter}}"/>
            <Button x:Name="DisableButton" Command="{x:Static local:WebServiceProxyCommands.DisableDevice}" CommandTarget="{Binding ElementName=CaptureConnectionControl}"
                    d:Visibility="Visible"
                    Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource booleanToVisibilityConverter}}">Disable Xbox Proxy</Button>
            <Separator Visibility="{Binding Path=IsEnabled, ElementName=DisableButton, Mode=OneWay, Converter={StaticResource booleanToVisibilityConverter}}"/>

            <Button x:Name="CheckButton" Command="{x:Static local:WebServiceProxyCommands.CheckDevice}" CommandTarget="{Binding ElementName=CaptureConnectionControl}"
        d:Visibility="Visible"
        Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource booleanToVisibilityConverter}}">Check Xbox Proxy Status</Button>
            <Separator Visibility="{Binding Path=IsEnabled, ElementName=DisableButton, Mode=OneWay, Converter={StaticResource booleanToVisibilityConverter}}"/>

            <ToggleButton x:Name="StartButton" IsChecked="{Binding CaptureController.IsRunning}" Command="{x:Static local:WebServiceProxyCommands.StartStopCapture}"
                          CommandParameter="{Binding IsChecked,RelativeSource={RelativeSource Self}}" CommandTarget="{Binding ElementName=CaptureConnectionControl}">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Content">
                            <Setter.Value>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="&#xE768;" FontFamily="Segoe MDL2 Assets" VerticalAlignment="Center"/>
                                    <TextBlock Text="{x:Static local:CaptureConnectionView.StartTraceText}" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="&#xE769;" FontFamily="Segoe MDL2 Assets" VerticalAlignment="Center"/>
                                            <TextBlock Text="{x:Static local:CaptureConnectionView.StopTraceText}" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
            <Separator/>
            <Button x:Name="AnalyzeButton" Command="{x:Static app:AppCommands.AnalyzeCaptures}" CommandTarget="{Binding ElementName=CaptureConnectionControl}">Analyze Capture</Button>
            <Separator/>
            <Button x:Name="ClearButton" Command="{x:Static app:AppCommands.ClearAllCaptures}" CommandTarget="{Binding ElementName=CaptureConnectionControl}">Clear Capture</Button>
            <Separator/>
            <Grid VerticalAlignment="Center" Margin="4,0,0,0">
                <CheckBox x:Name="AutoScrollButton" Content="Auto Scroll" IsChecked="{Binding AutoScroll, ElementName=CaptureConnectionControl}"/>
            </Grid>
        </ToolBar>

        <StackPanel Grid.Row="1" Orientation="Horizontal" Background="White">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <TextBlock x:Name="FiltersText" FontWeight="Bold" Margin="20,0" Text="Filters"/>
                <app:CheckBoxFilters x:Name="StatusFilters" FilterDesc="Status" FiltersChanged="OnFiltersChanged" ItemsSource="{Binding CaptureController.StatusFilterList}"/>
                <app:CheckBoxFilters x:Name="HostFilters"   FilterDesc="Host"   FiltersChanged="OnFiltersChanged" ItemsSource="{Binding CaptureController.HostFilterList}"/>
                <app:CheckBoxFilters x:Name="MethodFilters" FilterDesc="Method" FiltersChanged="OnFiltersChanged" ItemsSource="{Binding CaptureController.MethodFilterList}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                <TextBlock x:Name="DetailsText" FontWeight="Bold" Margin="20,0" Text="Details"/>
                <TextBlock x:Name="PortText" Text="Port: "/>
                <TextBlock>
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Text" Value="{Binding CaptureController.Port}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsReadOnly}" Value="True">
                                    <Setter Property="Text" Value="None"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
        </StackPanel>
        <DataGrid x:Name="ConnectionList" Grid.Row="2" Grid.RowSpan="3"
                  IsSynchronizedWithCurrentItem="True" IsReadOnly="True"
                  d:ItemsSource="{d:SampleData}" 
                  ItemsSource="{Binding CaptureController.ProxyConnections, Mode=OneWay}"
                  SelectedItem="{Binding CaptureController.SelectedConnectionModel}"
                  AutoGenerateColumns="False" GridLinesVisibility="None" ScrollViewer.ScrollChanged="ConnectionList_ScrollChanged">
            <DataGrid.Columns>
                <DataGridTextColumn Header="#"      Binding="{Binding RequestNumber}" Width="30"  HeaderStyle="{StaticResource CenterGridHeaderStyle}"/>
                <DataGridTextColumn Header="STATUS" Binding="{Binding Status}"        Width="50"  HeaderStyle="{StaticResource CenterGridHeaderStyle}"/>
                <DataGridTextColumn Header="METHOD" Binding="{Binding Method}"        Width="70"  HeaderStyle="{StaticResource CenterGridHeaderStyle}"/>
                <DataGridTextColumn Header="SCHEME" Binding="{Binding Scheme}"        Width="70"  HeaderStyle="{StaticResource CenterGridHeaderStyle}"/>
                <DataGridTextColumn Header="HOST"   Binding="{Binding Host}"          Width="200" HeaderStyle="{StaticResource CenterGridHeaderStyle}"/>
                <DataGridTextColumn Header="PATH"   Binding="{Binding Path}"          Width="*"   HeaderStyle="{StaticResource CenterGridHeaderStyle}"/>
            </DataGrid.Columns>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource proxyConnectionModelToBrushConverter}" Mode="OneWay">
                                <MultiBinding.Bindings>
                                    <Binding Path="Status" />
                                    <Binding Path="Method" />
                                </MultiBinding.Bindings>
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>

        <GridSplitter Grid.Column="1" Grid.RowSpan="63" Width="4" HorizontalAlignment="Center" VerticalAlignment="Stretch" ResizeDirection="Columns"/>

        <TabControl Grid.Row="0" Grid.Column="2" Grid.RowSpan="3">
            <TabItem x:Name="ReqestResponseTab" Header="Request/Response">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="4"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="300"/>
                    </Grid.ColumnDefinitions>

                    <!--
                    NOTE: someday we can get rid of the BodyText binding if the JsonConverter can be made into a MultiValueConverter like
                    the way that the BodyConverter works off of the HeadersDictionary and BodyBytes.
                    -->
                    <local:RequestResponseView x:Name="RequestViewControl" Grid.Row="0" Grid.ColumnSpan="2" Title="Request"
                                               FirstLineAndHeaders="{Binding SelectedItem.RequestLineAndHeaders, ElementName=ConnectionList, Mode=OneWay}"
                                               HeaderDictionary="{Binding SelectedItem.RequestHeaders, ElementName=ConnectionList, Mode=OneWay}"
                                               BodyBytes="{Binding SelectedItem.RequestBody, ElementName=ConnectionList, Mode=OneWay}"
                                               BodyText="{Binding SelectedItem.RequestText, ElementName=ConnectionList, Mode=OneWay}"
                                               />

                    <GridSplitter Grid.Row="1" Grid.ColumnSpan="2" Height="4" ResizeDirection="Rows" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>

                    <!--
                    NOTE: someday we can get rid of the BodyText binding if the JsonConverter can be made into a MultiValueConverter like
                    the way that the BodyConverter works off of the HeadersDictionary and BodyBytes.
                    -->
                    <local:RequestResponseView x:Name="ResponseViewControl" Grid.Row="2" Grid.ColumnSpan="2" Title="Response"
                                               FirstLineAndHeaders="{Binding SelectedItem.ResponseLineAndHeaders, ElementName=ConnectionList, Mode=OneWay}"
                                               HeaderDictionary="{Binding SelectedItem.ResponseHeaders, ElementName=ConnectionList, Mode=OneWay}"
                                               BodyBytes="{Binding SelectedItem.ResponseBody, ElementName=ConnectionList, Mode=OneWay}"
                                               BodyText="{Binding SelectedItem.ResponseText, ElementName=ConnectionList, Mode=OneWay}"
                                               />

                    <Grid Grid.Row="0" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0">
                                <Run x:Name="RequestIdLabel" Text="Request ID:" FontWeight="Bold"/>
                                <Run Text="{Binding SelectedItem.RequestNumber, ElementName=ConnectionList, Mode=OneWay}" d:Text="1000"/>
                        </TextBlock>
                        <TextBlock Grid.Row="0" Grid.Column="1">
                                <Run x:Name="TimeLabel" Text="Time:" FontWeight="Bold"/>
                                <Run Text="{Binding SelectedItem.RequestTime, ElementName=ConnectionList, Mode=OneWay, StringFormat=HH:mm:ss.fff}" d:Text="12:34:56.789"/>
                        </TextBlock>
                        <TextBlock Grid.Row="1" Grid.Column="1">
                                <Run x:Name="DurationLabel" Text="Duration:" FontWeight="Bold"/>
                                <Run Text="{Binding SelectedItem.Duration.Milliseconds, ElementName=ConnectionList, Mode=OneWay, StringFormat='{}{0} ms'}" d:Text="123 ms"/>
                        </TextBlock>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem x:Name="ScriptEditorTab" Header="Script Editor">
                <app:ScriptEditorView ScriptCollection="{Binding CaptureController.Scripts}" ScriptTypeCollection="{Binding CaptureController.ScriptTypes}" TabSize="4"/>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
