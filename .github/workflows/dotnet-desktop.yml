name: XMAT Win64 Desktop Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: XboxMultiplayerAnalysisTool.sln

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
      with:
        egress-policy: audit

    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@87b7050bc53ea08284295505d98d2aa94301e852 # v4.2.0
      with:
        dotnet-version: 8.0.x

    # Restore the solution
    - name: Restore the application
      run: dotnet restore $env:Solution_Name
      
    # Build
    - name: Build XMAT
      run: dotnet build $env:Solution_Name -c $env:Configuration --no-restore
      env:
        Configuration: ${{ matrix.configuration }}

    # Upload artifact (Debug)
    - name: Upload Artifacts
      uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
      with:
        name: XMAT_CI_Build_${{ env.Configuration }}
        path: XMAT\bin\x64\${{ env.Configuration }}\net8.0-windows10.0.17763.0\win-x64\
      env:
        Configuration: ${{ matrix.configuration }}
